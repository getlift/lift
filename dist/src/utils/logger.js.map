{
  "version": 3,
  "sources": ["../../../src/utils/logger.ts"],
  "sourcesContent": ["import chalk from \"chalk\";\n\ntype Logger = ((message?: string) => void) & {\n    debug(message: string): void;\n    verbose(message: string): void;\n    success(message: string): void;\n    warning(message: string): void;\n    error(message: string): void;\n    get(namespace: string): Logger;\n};\n\nexport interface Progress {\n    update(message?: string): void;\n    remove(): void;\n}\n\nexport type ServerlessUtils = {\n    writeText(message?: string | string[]): void;\n    log: Logger;\n    progress?: {\n        create(opts?: { message: string }): Progress;\n    };\n};\n\nlet utils: ServerlessUtils | undefined;\n\nfunction createLegacyUtils(): ServerlessUtils {\n    const logger = (message?: string | string[]) => {\n        if (Array.isArray(message)) {\n            message = message.join(\"\\n\");\n        }\n        console.log(\"Lift: \" + chalk.yellow(message));\n    };\n    logger.debug = (message?: string | string[]) => {\n        if (process.env.SLS_DEBUG !== undefined) {\n            if (Array.isArray(message)) {\n                message = message.join(\"\\n\");\n            }\n            console.log(chalk.gray(\"Lift: \" + (message ?? \"\")));\n        }\n    };\n    logger.verbose = logger.debug;\n    logger.success = logger;\n    logger.warning = logger;\n    logger.error = logger;\n    logger.get = () => logger;\n\n    return {\n        writeText: logger,\n        log: logger,\n    };\n}\n\nexport function setUtils(u: ServerlessUtils | undefined): void {\n    utils = u;\n}\n\nexport function getUtils(): ServerlessUtils {\n    if (utils === undefined) {\n        utils = createLegacyUtils();\n    }\n\n    return utils;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAwBlB,IAAI;AAEJ,6BAA8C;AAC1C,QAAM,SAAS,CAAC,YAAgC;AAC5C,QAAI,MAAM,QAAQ,UAAU;AACxB,gBAAU,QAAQ,KAAK;AAAA;AAE3B,YAAQ,IAAI,WAAW,qBAAM,OAAO;AAAA;AAExC,SAAO,QAAQ,CAAC,YAAgC;AAC5C,QAAI,QAAQ,IAAI,cAAc,QAAW;AACrC,UAAI,MAAM,QAAQ,UAAU;AACxB,kBAAU,QAAQ,KAAK;AAAA;AAE3B,cAAQ,IAAI,qBAAM,KAAK,WAAY,6BAAW;AAAA;AAAA;AAGtD,SAAO,UAAU,OAAO;AACxB,SAAO,UAAU;AACjB,SAAO,UAAU;AACjB,SAAO,QAAQ;AACf,SAAO,MAAM,MAAM;AAEnB,SAAO;AAAA,IACH,WAAW;AAAA,IACX,KAAK;AAAA;AAAA;AAIN,kBAAkB,GAAsC;AAC3D,UAAQ;AAAA;AAGL,oBAAqC;AACxC,MAAI,UAAU,QAAW;AACrB,YAAQ;AAAA;AAGZ,SAAO;AAAA;",
  "names": []
}
